{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alade\\\\OneDrive\\\\Documents\\\\my_class\\\\HW\\\\Employee-Directory-React\\\\client\\\\src\\\\components\\\\EmployeeDir\\\\index.js\";\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav/index.js\";\nimport Search from \"../Search/index.js\";\nimport EmpTable from \"../EmpTable/index.js\";\nimport Reset from \"../Reset/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeDir extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      people: [],\n      peopleCopy: [],\n      search: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleSearchClick = event => {\n      event.preventDefault();\n      const filterByGender = this.state.peopleCopy.filter(results => results.gender === this.state.search);\n      this.setState({\n        people: filterByGender\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        people: this.state.peopleCopy\n      });\n      document.getElementById('filterName').value = \"\";\n      document.getElementById('filterGender').value = \"\";\n    };\n\n    this.handleFilterClick = event => {\n      event.preventDefault();\n      const filterByName = this.state.peopleCopy.filter(names => names.name.first.toLowerCase().includes(this.state.search));\n      this.setState({\n        people: filterByName\n      });\n    };\n\n    this.sortbyFirstName = () => {\n      let people = this.state.people;\n      const sortedFirstName = [...this.state.people].sort((a, b) => {\n        let firstA = a.name.first.toUpperCase();\n        let firstB = b.name.first.toUpperCase();\n        if (firstA > firstB) return 1;\n        if (firstA < firstB) return -1;\n        return 0;\n      });\n      this.setState({\n        people: sortedFirstName\n      });\n    };\n\n    this.sortbyLastName = () => {\n      let people = this.state.people;\n      const sortedLastName = [...this.state.people].sort((a, b) => {\n        let lastA = a.name.last.toUpperCase();\n        let lastB = b.name.last.toUpperCase();\n        if (lastA > lastB) return 1;\n        if (lastA < lastB) return -1;\n        return 0;\n      });\n      this.setState({\n        people: sortedLastName\n      });\n    };\n\n    this.sortbyEmail = () => {\n      let people = this.state.people;\n      const sortedEmail = [...this.state.people].sort((a, b) => {\n        let emailA = a.email.toUpperCase();\n        let emailB = b.email.toUpperCase();\n        if (emailA > emailB) return 1;\n        if (emailA < emailB) return -1;\n        return 0;\n      });\n      this.setState({\n        people: sortedEmail\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted!\");\n    const data = fetch(\"https://randomuser.me/api/?results=50\");\n    data.then(response => response.json()).then(response => {\n      this.setState({\n        people: response.results,\n        peopleCopy: [...response.results]\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    console.log(\"I will unmount\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleInputChange: this.handleInputChange,\n        handleSearchClick: this.handleSearchClick,\n        handleFilterClick: this.handleFilterClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Reset, {\n        reset: this.reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EmpTable, {\n        people: this.state.people,\n        sortbyFirstName: this.sortbyFirstName,\n        sortbyLastName: this.sortbyLastName,\n        sortbyEmail: this.sortbyEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default EmployeeDir;","map":{"version":3,"sources":["C:/Users/alade/OneDrive/Documents/my_class/HW/Employee-Directory-React/client/src/components/EmployeeDir/index.js"],"names":["React","Component","Nav","Search","EmpTable","Reset","EmployeeDir","state","people","peopleCopy","search","handleInputChange","event","setState","target","value","handleSearchClick","preventDefault","filterByGender","filter","results","gender","reset","document","getElementById","handleFilterClick","filterByName","names","name","first","toLowerCase","includes","sortbyFirstName","sortedFirstName","sort","a","b","firstA","toUpperCase","firstB","sortbyLastName","sortedLastName","lastA","last","lastB","sortbyEmail","sortedEmail","emailA","email","emailB","componentDidMount","console","log","data","fetch","then","response","json","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KADwB;;AAAA,SAqB9BC,iBArB8B,GAqBTC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAvB6B;;AAAA,SAyB7BC,iBAzB6B,GAyBRJ,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACK,cAAN;AACA,YAAMC,cAAc,GAAG,KAAKX,KAAL,CAAWE,UAAX,CAAsBU,MAAtB,CAA8BC,OAAD,IAChDA,OAAO,CAACC,MAAR,KAAkB,KAAKd,KAAL,CAAWG,MADV,CAAvB;AAGA,WAAKG,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAEU;AAAT,OAAd;AACD,KA/B6B;;AAAA,SAiC9BI,KAjC8B,GAiCtB,MAAM;AACZ,WAAKT,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE;AAArB,OAAd;AACAc,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCT,KAAtC,GAA4C,EAA5C;AACAQ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCT,KAAxC,GAA8C,EAA9C;AACD,KArC6B;;AAAA,SAuC9BU,iBAvC8B,GAuCTb,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACK,cAAN;AACJ,YAAMS,YAAY,GAAG,KAAKnB,KAAL,CAAWE,UAAX,CAAsBU,MAAtB,CAA8BQ,KAAD,IAC9CA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwC,KAAKxB,KAAL,CAAWG,MAAnD,CADiB,CAArB;AAGA,WAAKG,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAEkB;AAAT,OAAd;AACG,KA7C6B;;AAAA,SA+C9BM,eA/C8B,GA+CZ,MAAK;AACrB,UAAIxB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACF,YAAMyB,eAAe,GAAG,CAAC,GAAG,KAAK1B,KAAL,CAAWC,MAAf,EAAuB0B,IAAvB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAAS;AACzD,YAAIC,MAAM,GAAGF,CAAC,CAACP,IAAF,CAAOC,KAAP,CAAaS,WAAb,EAAb;AACA,YAAIC,MAAM,GAAGH,CAAC,CAACR,IAAF,CAAOC,KAAP,CAAaS,WAAb,EAAb;AACA,YAAGD,MAAM,GAAIE,MAAb,EACI,OAAO,CAAP;AACJ,YAAGF,MAAM,GAAGE,MAAZ,EACI,OAAO,CAAC,CAAR;AACJ,eAAO,CAAP;AACH,OARuB,CAAxB;AASA,WAAK1B,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAEyB;AAAT,OAAd;AACD,KA3D+B;;AAAA,SA6DhCO,cA7DgC,GA6Df,MAAK;AAClB,UAAIhC,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACF,YAAMiC,cAAc,GAAG,CAAC,GAAG,KAAKlC,KAAL,CAAWC,MAAf,EAAuB0B,IAAvB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAAS;AACxD,YAAIM,KAAK,GAAGP,CAAC,CAACP,IAAF,CAAOe,IAAP,CAAYL,WAAZ,EAAZ;AACA,YAAIM,KAAK,GAAGR,CAAC,CAACR,IAAF,CAAOe,IAAP,CAAYL,WAAZ,EAAZ;AACA,YAAGI,KAAK,GAAIE,KAAZ,EACI,OAAO,CAAP;AACJ,YAAGF,KAAK,GAAGE,KAAX,EACI,OAAO,CAAC,CAAR;AACJ,eAAO,CAAP;AACH,OARsB,CAAvB;AASA,WAAK/B,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAEiC;AAAT,OAAd;AACD,KAzE+B;;AAAA,SA2EhCI,WA3EgC,GA2ElB,MAAK;AACf,UAAIrC,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACF,YAAMsC,WAAW,GAAG,CAAC,GAAG,KAAKvC,KAAL,CAAWC,MAAf,EAAuB0B,IAAvB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAAS;AACrD,YAAIW,MAAM,GAAGZ,CAAC,CAACa,KAAF,CAAQV,WAAR,EAAb;AACA,YAAIW,MAAM,GAAGb,CAAC,CAACY,KAAF,CAAQV,WAAR,EAAb;AACA,YAAGS,MAAM,GAAIE,MAAb,EACI,OAAO,CAAP;AACJ,YAAGF,MAAM,GAAGE,MAAZ,EACI,OAAO,CAAC,CAAR;AACJ,eAAO,CAAP;AACH,OARmB,CAApB;AASA,WAAKpC,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAEsC;AAAT,OAAd;AACD,KAvF+B;AAAA;;AAO9BI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAMC,IAAI,GAAGC,KAAK,CAAC,uCAAD,CAAlB;AACAD,IAAAA,IAAI,CACDE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,WAAK3C,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEgD,QAAQ,CAACpC,OAAnB;AAA4BX,QAAAA,UAAU,EAAE,CAAC,GAAG+C,QAAQ,CAACpC,OAAb;AAAxC,OAAd;AACD,KAJH;AAKD;;AAEDsC,EAAAA,oBAAoB,GAAG;AACrBP,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;AAqEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,iBAAiB,EAAI,KAAKhD,iBAAlC;AAAqD,QAAA,iBAAiB,EAAE,KAAKK,iBAA7E;AAAgG,QAAA,iBAAiB,EAAE,KAAKS;AAAxH;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKH;AAAnB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC,MAA7B;AAAqC,QAAA,eAAe,EAAE,KAAKwB,eAA3D;AAA4E,QAAA,cAAc,EAAE,KAAKQ,cAAjG;AAAiH,QAAA,WAAW,EAAE,KAAKK;AAAnI;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AApG6B;;AAuGpC,eAAevC,WAAf","sourcesContent":["import React , { Component } from \"react\";\r\nimport Nav from \"../Nav/index.js\";\r\nimport Search from \"../Search/index.js\";\r\nimport EmpTable from \"../EmpTable/index.js\";\r\nimport Reset from \"../Reset/index.js\";\r\n\r\nclass EmployeeDir extends Component {\r\n    state = {\r\n        people: [],\r\n        peopleCopy: [],\r\n        search: \"\"\r\n      };\r\n    \r\n      componentDidMount() {\r\n        console.log(\"mounted!\");\r\n        const data = fetch(\"https://randomuser.me/api/?results=50\");\r\n        data\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            this.setState({ people: response.results, peopleCopy: [...response.results] });\r\n          });\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        console.log(\"I will unmount\");\r\n      }\r\n    \r\n      handleInputChange = (event) => {\r\n        this.setState({ search: event.target.value });\r\n      };\r\n    \r\n       handleSearchClick = (event) => {\r\n        event.preventDefault();\r\n        const filterByGender = this.state.peopleCopy.filter((results)=>\r\n            results.gender ===this.state.search\r\n        )\r\n        this.setState({people: filterByGender});\r\n      }\r\n\r\n      reset = () => {\r\n        this.setState({ people: this.state.peopleCopy });\r\n        document.getElementById('filterName').value=\"\";\r\n        document.getElementById('filterGender').value=\"\";\r\n      };\r\n\r\n      handleFilterClick = (event) => {\r\n        event.preventDefault();\r\n    const filterByName = this.state.peopleCopy.filter((names)=>\r\n        names.name.first.toLowerCase().includes(this.state.search)\r\n    )\r\n    this.setState({people: filterByName});\r\n      }\r\n\r\n      sortbyFirstName = () =>{\r\n        let people = this.state.people;\r\n      const sortedFirstName = [...this.state.people].sort((a,b) => {\r\n          let firstA = a.name.first.toUpperCase();\r\n          let firstB = b.name.first.toUpperCase();\r\n          if(firstA  > firstB) \r\n              return 1;\r\n          if(firstA < firstB) \r\n              return -1;\r\n          return 0;\r\n      });\r\n      this.setState({people: sortedFirstName});\r\n    }\r\n    \r\n    sortbyLastName = () =>{\r\n        let people = this.state.people;\r\n      const sortedLastName = [...this.state.people].sort((a,b) => {\r\n          let lastA = a.name.last.toUpperCase();\r\n          let lastB = b.name.last.toUpperCase();\r\n          if(lastA  > lastB) \r\n              return 1;\r\n          if(lastA < lastB) \r\n              return -1;\r\n          return 0;\r\n      });\r\n      this.setState({people: sortedLastName});\r\n    }\r\n\r\n    sortbyEmail = () =>{\r\n        let people = this.state.people;\r\n      const sortedEmail = [...this.state.people].sort((a,b) => {\r\n          let emailA = a.email.toUpperCase();\r\n          let emailB = b.email.toUpperCase();\r\n          if(emailA  > emailB) \r\n              return 1;\r\n          if(emailA < emailB) \r\n              return -1;\r\n          return 0;\r\n      });\r\n      this.setState({people: sortedEmail});\r\n    }\r\n      render() {\r\n        return (\r\n          <div className=\"App\">\r\n            <Nav/>\r\n            <br/>\r\n            <Search handleInputChange = {this.handleInputChange} handleSearchClick={this.handleSearchClick} handleFilterClick={this.handleFilterClick}/>\r\n            <Reset reset={this.reset}/>\r\n            <br/>\r\n            <br/>\r\n            <EmpTable people={this.state.people} sortbyFirstName={this.sortbyFirstName} sortbyLastName={this.sortbyLastName} sortbyEmail={this.sortbyEmail}/>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default EmployeeDir;"]},"metadata":{},"sourceType":"module"}